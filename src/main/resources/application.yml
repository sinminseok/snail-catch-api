spring:
  application:
    name: "snail-catch"
  config:
    import: "optional:file:.env[.properties]"
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    cache: false
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USER_NAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 100 # 커넥션 풀에서 동시에 사용할 수 있는 최대 커넥션 수
      minimum-idle: 10 # 최소한으로 풀에 항상 유지할 유휴 커넥션 수
      idle-timeout: 600000 # 유휴 커넥션이 풀에서 제거되기 전 최대 대기 시간 (10분)
      max-lifetime: 1800000 # 커넥션이 살아 있는 최대 시간, 이 시간이 지나면 커넥션 새로 만듬 (30분)
      connection-timeout: 30000 # 커넥션 풀에서 커넥션을 얻기 위해 최대로 기다리는 시간 (30초)
      validation-timeout: 5000 # 커넥션 유효성 검사(살아 있는지)를 할 때 최대 대기 시간(5초)
      initialization-fail-timeout: 1 # 초기화 실패 시 얼마나 빨리 예외를 던질지 설정
      read-only: false # 컨게션이 읽이 전용 여부인지 여부
      leak-detection-threshold: 0 # 커넥션을 반환하지 않고 오래 사용하면 경고 발생 기준 시간

  sql:
    init:
      mode: always

  jpa:
    hibernate:
      ddl-auto: update
      database-platform: org.hibernate.dialect.MySQLDialect
      defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: false
        format_sql: false

  data:
    mongodb:
      uri: ${MONGO_DB_URL}
      database: ${MONGO_DB_NAME}

jwt:
  secret: ${SECRET_KEY}
  access-key-expiration-s: ${ACCESS_KEY_EXPIRATION_SECONDS}
  refresh-key-expiration-s: ${REFRESH_KEY_EXPIRATION_SECONDS}

management:
  metrics:
    export:
      otlp:
        enabled: true
        endpoint: http://localhost:4317
    enable:
      all: true
      jvm: true
  endpoints:
    web:
      exposure:
        include: "*"
    prometheus:
      enabled: true


otel:
  resource:
    attributes:
      service.name: ticketon-service
  exporter:
    otlp:
      endpoint: http://localhost:4317
      protocol: grpc


server:
  tomcat:
    threads:
      max: 500 # Tomcat 이 동시에 처리할 수 있는 최대 작업 스레드 수, CPU 코어 수의 2~4배 수준으로 설정
      min-spare: 10
      max-queue-capacity: 2147483647 # Tomcat dl ahems

    max-connections: 10000  # Tomcat 이 미리 준비해두는 유휴 스레드  # 동시에 유지할 수 있는 TCP 커넥션
    accept-count: 100 # Tomcat 이 모든 작업 스레드를 사용중일때, 대기 큐에 쌓는 최대 요청 수
    connection-timeout: 60000 # 요청을 보내지 않은 채 연결만을 유지하며 기다리는 최대 시간
    keep-alive-timeout: 30000 # Keep-Alive 기능을 사용할 때, 하나의 TCP 커넥션으로 다음 요청을 기다리는 시간
    max-http-header-size: 8192 # 헤더의 전체 크기
    max-keep-alive-requests: 100 # 하나의 Keep-Alive 연결에서 연속적으로 처리할 수 있는 요청의 최대 수